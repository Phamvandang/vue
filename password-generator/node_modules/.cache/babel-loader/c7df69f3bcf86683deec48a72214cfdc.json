{"remainingRequest":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/babel-loader/lib/index.js!/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/phamdang/DangPV/Vue/Code/vue/password-generator/src/components/PasswordGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/src/components/PasswordGenerator.vue","mtime":1586083668000},{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/phamdang/DangPV/Vue/Code/vue/password-generator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICBnZW5lcmF0ZWRQYXNzd29yZDogJ0dlbmVyYXRlZFBhc3N3b3JkJywKICAgICAgcGFzc3dvcmRMZW5ndGg6IDEwLAogICAgICBpbmNsdWRlVXBwZXJDYXNlOiBmYWxzZSwKICAgICAgaW5jbHVkZU51bWJlcjogZmFsc2UsCiAgICAgIGluY2x1ZGVTeW1ib2w6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2VuZXJhdGVQYXNzd29yZDogZnVuY3Rpb24gZ2VuZXJhdGVQYXNzd29yZCgpIHsKICAgICAgaWYgKCF0aGlzLnBhc3N3b3JkTGVuZ3RoKSByZXR1cm47CiAgICAgIHRoaXMudHJpZ2dlckxvYWRpbmcodHJ1ZSk7CiAgICAgIHZhciBwYXNzd29yZCA9ICIiOwogICAgICB2YXIgY2hhcmFjdGVycyA9ICJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiI7CiAgICAgIGlmICh0aGlzLmluY2x1ZGVVcHBlckNhc2UpIGNoYXJhY3RlcnMgKz0gIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaIjsKICAgICAgaWYgKHRoaXMuaW5jbHVkZU51bWJlcikgY2hhcmFjdGVycyArPSAiMDEyMzQ1Njc4OSI7CiAgICAgIGlmICh0aGlzLmluY2x1ZGVTeW1ib2wpIGNoYXJhY3RlcnMgKz0gIiFcIiMkJSYnKCkqKywtLi86Ozw9Pj9AW1xcXV5fYHt8fX4iOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBhc3N3b3JkTGVuZ3RoOyBpKyspIHsKICAgICAgICBwYXNzd29yZCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzLmxlbmd0aCkpOwogICAgICB9CgogICAgICB0aGlzLmdlbmVyYXRlZFBhc3N3b3JkID0gcGFzc3dvcmQ7CiAgICAgIHRoaXMudHJpZ2dlckxvYWRpbmcoZmFsc2UpOwogICAgfSwKICAgIHRyaWdnZXJMb2FkaW5nOiBmdW5jdGlvbiB0cmlnZ2VyTG9hZGluZyhzdGF0ZSkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHN0YXRlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PasswordGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,iBAAA,EAAA,mBAFA;AAGA,MAAA,cAAA,EAAA,EAHA;AAIA,MAAA,gBAAA,EAAA,KAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,aAAA,EAAA;AANA,KAAA;AAAA,GADA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,CAAA,KAAA,cAAA,EAAA;AACA,WAAA,cAAA,CAAA,IAAA;AAEA,UAAA,QAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,4BAAA;AACA,UAAA,KAAA,gBAAA,EAAA,UAAA,IAAA,4BAAA;AACA,UAAA,KAAA,aAAA,EAAA,UAAA,IAAA,YAAA;AACA,UAAA,KAAA,aAAA,EAAA,UAAA,IAAA,oCAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,cAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,QAAA,IAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA,CAAA;AACA;;AAEA,WAAA,iBAAA,GAAA,QAAA;AACA,WAAA,cAAA,CAAA,KAAA;AACA,KAjBA;AAkBA,IAAA,cAlBA,0BAkBA,KAlBA,EAkBA;AACA,WAAA,SAAA,GAAA,KAAA;AACA;AApBA;AATA,CAAA","sourcesContent":["<template>\n    <v-container text-center>\n        <h1\n            class=\"py-5 mx-auto password\"\n            v-if=\"!isLoading\"\n        >{{generatedPassword}}</h1>\n        <v-progress-circular\n            indeterminate\n            color=\"primary\"\n            v-else\n        ></v-progress-circular>\n        <v-row>\n            <v-col cols=\"12\" class=\"custom-width\">\n                <v-col>\n                    <v-slider\n                        v-model=\"passwordLength\"\n                        thumb-label\n                        min=\"1\"\n                        max=\"30\"\n                    ></v-slider>\n                </v-col>\n                <v-col>\n                    <div class=\"\">\n                        <v-checkbox\n                            v-model=\"includeUpperCase\"\n                            label=\"Includes Uppercase Character\"\n                        ></v-checkbox>\n                    </div>\n                </v-col>\n                <v-col>\n                    <div class=\"\">\n                        <v-checkbox\n                            v-model=\"includeNumber\"\n                            label=\"Includes Number Character\"\n                        ></v-checkbox>\n                    </div>\n                </v-col>\n                <v-col>\n                    <div class=\"\">\n                        <v-checkbox\n                            v-model=\"includeSymbol\"\n                            label=\"Includes Symbol Character\"\n                        ></v-checkbox>\n                    </div>\n                </v-col>\n            </v-col>\n        </v-row>\n        <v-btn\n            block\n            dark\n            x-large\n            @click=\"generatePassword()\"\n        >Generate</v-btn>\n    </v-container>\n</template>\n\n<script>\nexport default {\n    data: () => ({\n        isLoading: false,\n        generatedPassword: 'GeneratedPassword',\n        passwordLength: 10,\n        includeUpperCase: false,\n        includeNumber: false,\n        includeSymbol: false\n    }),\n    methods: {\n        generatePassword() {\n            if (!this.passwordLength) return\n            this.triggerLoading(true)\n\n            let password = \"\"\n            let characters = \"abcdefghijklmnopqrstuvwxyz\"\n            if (this.includeUpperCase) characters += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            if (this.includeNumber) characters += \"0123456789\"\n            if (this.includeSymbol) characters += \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\"\n\n            for (let i = 0; i < this.passwordLength; i++) {\n                password += characters.charAt(Math.floor(Math.random() * characters.length))\n            }\n\n            this.generatedPassword = password\n            this.triggerLoading(false)\n        },\n        triggerLoading(state) {\n            this.isLoading = state\n        }\n    }\n}\n</script>\n\n<style scoped>\n.password {\n    overflow-wrap: break-word;\n}\n</style>\n"],"sourceRoot":"src/components"}]}